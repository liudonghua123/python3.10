on:
  push:
    branches:
      - '*'
    tags:
      - '*'

jobs:
  update:
    if: contains(github.ref, 'tags')
    runs-on: ubuntu-latest
    steps:
    - name: configure git
      run: |
        git config --global user.name 'Anthony Sottile'
        git config --global user.email asottile+deadsnakes@umich.edu
    - name: clone target
      uses: actions/checkout@v2
      with:
        path: target
        fetch-depth: 0
    - name: clone runbooks
      uses: actions/checkout@v2
      with:
        path: runbooks
        repository: deadsnakes/runbooks
    - name: pull upstream
      run: runbooks/import-upstream --repo target ${{ github.ref_name }}
  build:
    needs: update
    runs-on: ubuntu-latest
    if: contains(github.ref, 'tags')
    strategy:
      matrix:
        include:
        - name: bionic
        - name: focal
    steps:
    - name: configure debian and git
      run: |
        echo 'DEBEMAIL=asottile+deadsnakes@umich.edu' >> $GITHUB_ENV
        echo 'DEBFULLNAME=Anthony Sottile (deadsnakes)' >> $GITHUB_ENV
        git config --global user.name 'Anthony Sottile'
        git config --global user.email asottile+deadsnakes@umich.edu
    - name: clone target
      uses: actions/checkout@v2
      with:
        path: target
        fetch-depth: 0
    - name: clone runbooks
      uses: actions/checkout@v2
      with:
        path: runbooks
        repository: deadsnakes/runbooks
    - uses: actions/setup-python@v2
    - name: install gbp
      run: pip install gbp==0.9.24
    - name: install devscripts
      run: sudo apt-get update -qq && sudo apt-get install -y devscripts
    - name: import gpg key
      run: |
        install --directory ~/.gnupg --mode 700
        base64 -d <<< '${{ secrets.GPG_PUBLIC }}' > ~/.gnupg/pubring.gpg
        base64 -d <<< '${{ secrets.GPG_SECRET }}' > ~/.gnupg/secring.gpg
        chmod 600 ~/.gnupg/*
    - name: update branch
      run: SHELL=false runbooks/refresh-patches --repo target ubuntu/${{ matrix.name }}
    - name: build
      run: mkdir dist && cd target && ../runbooks/build
    - name: test
      run: runbooks/quick-test --distrib-codename ${{ matrix.name }} --dist-dir dist --src-dir target
    - name: create all-in-one tar
      run: tar -czvf dist/python-${{ github.ref_name }}-${{ matrix.name }}-amd64-all-in-one.tar dist/*.deb
    - name: check files
      run: ls -lah dist target
    - uses: actions/upload-artifact@v3
      with:
        name: python-${{ github.ref_name }}-${{ matrix.name }}-amd64-all-in-one.tar
        path: dist/python-${{ github.ref_name }}-${{ matrix.name }}-amd64-all-in-one.tar
    - uses: xresloader/upload-to-github-release@v1
      name: upload files to release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        file: |-
          dist/python-${{ github.ref_name }}-${{ matrix.name }}-amd64-all-in-one.tar; dist/*.deb
        tags: true
        draft: false
        overwrite: true
